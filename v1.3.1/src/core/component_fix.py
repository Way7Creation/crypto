#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ - –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
–§–∞–π–ª: src/core/component_fix.py

–í–ê–ñ–ù–û: –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –∏–º–ø–æ—Ä—Ç–∞.
–í –±—É–¥—É—â–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ component_system.py
"""

import logging
import asyncio
from typing import Dict, Any, Optional
from .component_system import component_manager, ComponentStatus

logger = logging.getLogger(__name__)

def patch_component_manager():
    """
    –§—É–Ω–∫—Ü–∏—è –ø–∞—Ç—á–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º
    
    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ manager.py –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    —Å–∏—Å—Ç–µ–º—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
    """
    logger.info("üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–∞—Ç—á –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞
        if component_manager is None:
            logger.error("‚ùå ComponentManager –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω")
            return False
            
        logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ç—á–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}")
        return False

def get_component_status() -> Dict[str, Any]:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    
    Returns:
        Dict: –°—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    """
    try:
        return component_manager.get_status()
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return {}

def initialize_component_system() -> bool:
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    
    Returns:
        bool: –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    """
    try:
        logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–∞—Ç—á
        patch_result = patch_component_manager()
        
        if patch_result:
            logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return True
        else:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return False

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
def ensure_component_ready(component_name: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞"""
    try:
        return component_manager.is_ready(component_name)
    except:
        return False

def get_component_instance(component_name: str) -> Optional[Any]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞"""
    try:
        return component_manager.get_component(component_name)
    except:
        return None

# –≠–∫—Å–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
__all__ = [
    'patch_component_manager',
    'get_component_status', 
    'initialize_component_system',
    'ensure_component_ready',
    'get_component_instance'
]